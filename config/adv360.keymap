/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <100>;
        };
    };

    macros {
        parenths: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp SQT &kp SQT &kp RPAR &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "TEST";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                         &mo 3        &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                                          &none        &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none        &kp LG(LS(S))         &kp ESCAPE            &kp HOME  &kp RCTRL   &none        &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                      &kp LEFT_ALT          &kp END                            &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &lt 1 ENTER  &mt LEFT_CONTROL TAB  &kp LEFT_CONTROL      &kp LGUI  &backspace  &lt 4 SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1           &kp N2            &kp N3             &kp N4                &kp N5                 &trans                                                         &mo 3      &kp N6        &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR            &kp PERCENT            &none                                                          &none      &kp Y         &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp DELETE       &kp BSLH
&kp ESC    &kp CARET        &kp AMPERSAND     &kp STAR           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &parenths  &kp LC(LG(S))  &kp LALT      &kp LGUI   &kp RCTRL   &none      &kp KP_PLUS   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_MULTIPLY  &kp SQT
&kp LSHFT  &kp UNDERSCORE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE                                  &kp HOME      &kp PG_UP                         &kp KP_MINUS  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_DIVIDE    &kp RSHFT
&mo 2      &kp GRAVE        &kp CAPS          &kp LEFT           &kp RIGHT                                    &none      &none          &kp END       &kp PG_DN  &backspace  &kp KP_N0                &kp UP      &kp DOWN      &kp KP_DOT     &kp EQUAL        &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3              &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &kp C_VOL_UP       &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &kp C_VOLUME_DOWN  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                             &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                     &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_moving {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                          &none   &none          &none     &none           &none      &none       &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                          &none   &none          &kp HOME  &kp UP_ARROW    &kp END    &kp DELETE  &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans              &trans      &trans  &trans  &none   &kp PAGE_UP    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp ESCAPE  &none
&trans  &trans  &trans  &trans  &trans  &trans                                      &trans      &trans                  &kp PAGE_DOWN  &kp HOME  &none           &kp END    &none       &none
&trans  &trans  &trans  &trans  &trans          &kp LEFT_SHIFT  &kp LC(LEFT_SHIFT)  &trans      &trans  &trans  &trans                 &none     &none           &none      &none       &none
            >;
        };
    };
};
